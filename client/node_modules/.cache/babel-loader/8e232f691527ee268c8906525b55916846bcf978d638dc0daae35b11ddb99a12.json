{"ast":null,"code":"// src/App.js\nimport React,{useRef,useEffect,useState}from'react';import io from'socket.io-client';import{AppBar,Toolbar,Typography,IconButton,Button,Slider,Box,TextField,CircularProgress}from'@mui/material';import{Brush,LayersClear}from'@mui/icons-material';import{SketchPicker}from'react-color';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const socket=io();function App(){const canvasRef=useRef(null);const contextRef=useRef(null);const drawing=useRef(false);// States for brush properties\nconst[brushSize,setBrushSize]=useState(5);const[brushColor,setBrushColor]=useState('#000000');// Action stacks for undo/redo functionality\nconst actionStack=useRef([]);const undoneStack=useRef([]);// State for room management\nconst[roomId,setRoomId]=useState('');const[inRoom,setInRoom]=useState(false);// State for loading indicator\nconst[isLoading,setIsLoading]=useState(false);// Initialize canvas context when inRoom changes to true\nuseEffect(()=>{if(inRoom&&canvasRef.current){const canvas=canvasRef.current;const context=canvas.getContext('2d');contextRef.current=context;// Set initial canvas dimensions\nresizeCanvas();}},[inRoom]);// Handle window resize\nuseEffect(()=>{if(inRoom){window.addEventListener('resize',resizeCanvas);return()=>{window.removeEventListener('resize',resizeCanvas);};}},[inRoom]);useEffect(()=>{if(inRoom){// Handle incoming drawing data\nsocket.on('drawing',onDrawingEvent);socket.on('clearCanvas',clearCanvas);socket.on('undo',onUndoEvent);socket.on('redo',onRedoEvent);// Clean up\nreturn()=>{socket.off('drawing',onDrawingEvent);socket.off('clearCanvas',clearCanvas);socket.off('undo',onUndoEvent);socket.off('redo',onRedoEvent);};}},[inRoom]);const resizeCanvas=()=>{const canvas=canvasRef.current;const sidePanelWidth=200;// Width of the side panel\nconst appBarHeight=64;// Height of the AppBar\ncanvas.width=window.innerWidth-sidePanelWidth;canvas.height=window.innerHeight-appBarHeight;// Redraw existing content after resizing\nredrawCanvas();};const joinRoom=()=>{if(roomId.trim()==='')return;setIsLoading(true);socket.emit('joinRoom',roomId);// Listen for loadCanvas event\nsocket.on('loadCanvas',actions=>{loadCanvasActions(actions);setIsLoading(false);setInRoom(true);// Set inRoom to true after loading is complete\n});};const loadCanvasActions=actions=>{actionStack.current=actions||[];redrawCanvas();};const startDrawing=_ref=>{let{nativeEvent}=_ref;drawing.current=true;const{offsetX,offsetY}=nativeEvent;contextRef.current.beginPath();contextRef.current.moveTo(offsetX,offsetY);// Save action\nconst action={type:'begin',offsetX,offsetY,brushSize,brushColor};actionStack.current.push(action);// Clear the undone stack\nundoneStack.current=[];// Emit the action to the server\nsocket.emit('drawing',{roomId,action});};const finishDrawing=()=>{drawing.current=false;contextRef.current.closePath();};const draw=_ref2=>{let{nativeEvent}=_ref2;if(!drawing.current)return;const{offsetX,offsetY}=nativeEvent;contextRef.current.lineWidth=brushSize;contextRef.current.lineCap='round';contextRef.current.strokeStyle=brushColor;contextRef.current.lineTo(offsetX,offsetY);contextRef.current.stroke();// Save action\nconst action={type:'draw',offsetX,offsetY,brushSize,brushColor};actionStack.current.push(action);// Emit drawing data to server\nsocket.emit('drawing',{roomId,action});};const onDrawingEvent=action=>{const context=contextRef.current;context.lineWidth=action.brushSize;context.lineCap='round';context.strokeStyle=action.brushColor;if(action.type==='begin'){context.beginPath();context.moveTo(action.offsetX,action.offsetY);}else if(action.type==='draw'){context.lineTo(action.offsetX,action.offsetY);context.stroke();}// Save action\nactionStack.current.push(action);};const handleClearCanvas=()=>{clearCanvas();socket.emit('clearCanvas',roomId);// Clear action stacks\nactionStack.current=[];undoneStack.current=[];};const clearCanvas=()=>{const canvas=canvasRef.current;const context=contextRef.current;context.clearRect(0,0,canvas.width,canvas.height);};const undo=()=>{if(actionStack.current.length===0)return;// Remove the last action(s) and add to undone stack\nlet action=actionStack.current.pop();undoneStack.current.push(action);if(action.type==='draw'){while(actionStack.current.length>0){action=actionStack.current.pop();undoneStack.current.push(action);if(action.type==='begin')break;}}redrawCanvas();// Emit undo event\nsocket.emit('undo',{roomId});};const redo=()=>{if(undoneStack.current.length===0)return;// Restore actions from the undone stack\nlet action=undoneStack.current.pop();actionStack.current.push(action);if(action.type==='begin'){while(undoneStack.current.length>0){action=undoneStack.current.pop();actionStack.current.push(action);if(action.type==='begin')break;}}redrawCanvas();// Emit redo event\nsocket.emit('redo',{roomId,action});};const onUndoEvent=()=>{if(actionStack.current.length===0)return;// Remove the last action(s) and add to undone stack\nlet action=actionStack.current.pop();undoneStack.current.push(action);if(action.type==='draw'){while(actionStack.current.length>0){action=actionStack.current.pop();undoneStack.current.push(action);if(action.type==='begin')break;}}redrawCanvas();};const onRedoEvent=action=>{if(!action)return;// Restore actions from the undone stack\nactionStack.current.push(action);if(action.type==='begin'){while(undoneStack.current.length>0){action=undoneStack.current.pop();actionStack.current.push(action);if(action.type==='begin')break;}}redrawCanvas();};const redrawCanvas=()=>{clearCanvas();const context=contextRef.current;context.lineJoin='round';actionStack.current.forEach(action=>{context.lineWidth=action.brushSize;context.lineCap='round';context.strokeStyle=action.brushColor;if(action.type==='begin'){context.beginPath();context.moveTo(action.offsetX,action.offsetY);}else if(action.type==='draw'){context.lineTo(action.offsetX,action.offsetY);context.stroke();}});};// Room selection screen\nif(!inRoom){return/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',height:'100vh',alignItems:'center',justifyContent:'center',backgroundColor:'#f5f5f5'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Enter Room ID\"}),/*#__PURE__*/_jsx(TextField,{label:\"Room ID\",value:roomId,onChange:e=>setRoomId(e.target.value),variant:\"outlined\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:joinRoom,sx:{marginTop:'20px'},children:\"Join Room\"})]});}return/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',height:'100vh'},children:[/*#__PURE__*/_jsx(AppBar,{position:\"static\",children:/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsx(Brush,{}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",sx:{flexGrow:1,marginLeft:1},children:[\"Collaborative Drawing Board - Room: \",roomId]}),/*#__PURE__*/_jsx(IconButton,{color:\"inherit\",onClick:handleClearCanvas,children:/*#__PURE__*/_jsx(LayersClear,{})})]})}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexGrow:1},children:[/*#__PURE__*/_jsxs(Box,{sx:{width:'200px',padding:'10px',backgroundColor:'#f5f5f5',overflowY:'auto',boxShadow:'2px 0px 5px rgba(0,0,0,0.1)'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Brush Size\"}),/*#__PURE__*/_jsx(Slider,{value:brushSize,onChange:(e,value)=>setBrushSize(value),min:1,max:50,\"aria-labelledby\":\"brush-size-slider\"}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",sx:{marginTop:'20px'},children:\"Brush Color\"}),/*#__PURE__*/_jsx(SketchPicker,{color:brushColor,onChangeComplete:color=>setBrushColor(color.hex),disableAlpha:true,width:\"180px\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:undo,sx:{marginTop:'20px',width:'100%'},children:\"Undo\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:redo,sx:{marginTop:'10px',width:'100%'},children:\"Redo\"})]}),/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,style:{border:'1px solid #ccc',flexGrow:1,cursor:'crosshair'},onMouseDown:startDrawing,onMouseUp:finishDrawing,onMouseOut:finishDrawing,onMouseMove:draw})]}),isLoading&&/*#__PURE__*/_jsx(Box,{sx:{position:'absolute',top:0,left:0,width:'100%',height:'100%',backgroundColor:'rgba(255,255,255,0.8)',display:'flex',alignItems:'center',justifyContent:'center',zIndex:1000},children:/*#__PURE__*/_jsx(CircularProgress,{})})]});}export default App;","map":{"version":3,"names":["React","useRef","useEffect","useState","io","AppBar","Toolbar","Typography","IconButton","Button","Slider","Box","TextField","CircularProgress","Brush","LayersClear","SketchPicker","jsx","_jsx","jsxs","_jsxs","socket","App","canvasRef","contextRef","drawing","brushSize","setBrushSize","brushColor","setBrushColor","actionStack","undoneStack","roomId","setRoomId","inRoom","setInRoom","isLoading","setIsLoading","current","canvas","context","getContext","resizeCanvas","window","addEventListener","removeEventListener","on","onDrawingEvent","clearCanvas","onUndoEvent","onRedoEvent","off","sidePanelWidth","appBarHeight","width","innerWidth","height","innerHeight","redrawCanvas","joinRoom","trim","emit","actions","loadCanvasActions","startDrawing","_ref","nativeEvent","offsetX","offsetY","beginPath","moveTo","action","type","push","finishDrawing","closePath","draw","_ref2","lineWidth","lineCap","strokeStyle","lineTo","stroke","handleClearCanvas","clearRect","undo","length","pop","redo","lineJoin","forEach","sx","display","flexDirection","alignItems","justifyContent","backgroundColor","children","variant","gutterBottom","label","value","onChange","e","target","color","onClick","marginTop","position","flexGrow","marginLeft","padding","overflowY","boxShadow","min","max","onChangeComplete","hex","disableAlpha","ref","style","border","cursor","onMouseDown","onMouseUp","onMouseOut","onMouseMove","top","left","zIndex"],"sources":["C:/Users/shaun/Desktop/100x/multilingual-chat-widget/client/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Button,\n  Slider,\n  Box,\n  TextField,\n  CircularProgress,\n} from '@mui/material';\nimport { Brush, LayersClear } from '@mui/icons-material';\nimport { SketchPicker } from 'react-color';\n\nconst socket = io();\n\nfunction App() {\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const drawing = useRef(false);\n\n  // States for brush properties\n  const [brushSize, setBrushSize] = useState(5);\n  const [brushColor, setBrushColor] = useState('#000000');\n\n  // Action stacks for undo/redo functionality\n  const actionStack = useRef([]);\n  const undoneStack = useRef([]);\n\n  // State for room management\n  const [roomId, setRoomId] = useState('');\n  const [inRoom, setInRoom] = useState(false);\n\n  // State for loading indicator\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Initialize canvas context when inRoom changes to true\n  useEffect(() => {\n    if (inRoom && canvasRef.current) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      contextRef.current = context;\n\n      // Set initial canvas dimensions\n      resizeCanvas();\n    }\n  }, [inRoom]);\n\n  // Handle window resize\n  useEffect(() => {\n    if (inRoom) {\n      window.addEventListener('resize', resizeCanvas);\n\n      return () => {\n        window.removeEventListener('resize', resizeCanvas);\n      };\n    }\n  }, [inRoom]);\n\n  useEffect(() => {\n    if (inRoom) {\n      // Handle incoming drawing data\n      socket.on('drawing', onDrawingEvent);\n      socket.on('clearCanvas', clearCanvas);\n      socket.on('undo', onUndoEvent);\n      socket.on('redo', onRedoEvent);\n\n      // Clean up\n      return () => {\n        socket.off('drawing', onDrawingEvent);\n        socket.off('clearCanvas', clearCanvas);\n        socket.off('undo', onUndoEvent);\n        socket.off('redo', onRedoEvent);\n      };\n    }\n  }, [inRoom]);\n\n  const resizeCanvas = () => {\n    const canvas = canvasRef.current;\n    const sidePanelWidth = 200; // Width of the side panel\n    const appBarHeight = 64; // Height of the AppBar\n\n    canvas.width = window.innerWidth - sidePanelWidth;\n    canvas.height = window.innerHeight - appBarHeight;\n\n    // Redraw existing content after resizing\n    redrawCanvas();\n  };\n\n  const joinRoom = () => {\n    if (roomId.trim() === '') return;\n\n    setIsLoading(true);\n    socket.emit('joinRoom', roomId);\n\n    // Listen for loadCanvas event\n    socket.on('loadCanvas', (actions) => {\n      loadCanvasActions(actions);\n      setIsLoading(false);\n      setInRoom(true); // Set inRoom to true after loading is complete\n    });\n  };\n\n  const loadCanvasActions = (actions) => {\n    actionStack.current = actions || [];\n    redrawCanvas();\n  };\n\n  const startDrawing = ({ nativeEvent }) => {\n    drawing.current = true;\n    const { offsetX, offsetY } = nativeEvent;\n\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n\n    // Save action\n    const action = {\n      type: 'begin',\n      offsetX,\n      offsetY,\n      brushSize,\n      brushColor,\n    };\n    actionStack.current.push(action);\n    // Clear the undone stack\n    undoneStack.current = [];\n\n    // Emit the action to the server\n    socket.emit('drawing', { roomId, action });\n  };\n\n  const finishDrawing = () => {\n    drawing.current = false;\n    contextRef.current.closePath();\n  };\n\n  const draw = ({ nativeEvent }) => {\n    if (!drawing.current) return;\n\n    const { offsetX, offsetY } = nativeEvent;\n\n    contextRef.current.lineWidth = brushSize;\n    contextRef.current.lineCap = 'round';\n    contextRef.current.strokeStyle = brushColor;\n\n    contextRef.current.lineTo(offsetX, offsetY);\n    contextRef.current.stroke();\n\n    // Save action\n    const action = {\n      type: 'draw',\n      offsetX,\n      offsetY,\n      brushSize,\n      brushColor,\n    };\n    actionStack.current.push(action);\n\n    // Emit drawing data to server\n    socket.emit('drawing', { roomId, action });\n  };\n\n  const onDrawingEvent = (action) => {\n    const context = contextRef.current;\n\n    context.lineWidth = action.brushSize;\n    context.lineCap = 'round';\n    context.strokeStyle = action.brushColor;\n\n    if (action.type === 'begin') {\n      context.beginPath();\n      context.moveTo(action.offsetX, action.offsetY);\n    } else if (action.type === 'draw') {\n      context.lineTo(action.offsetX, action.offsetY);\n      context.stroke();\n    }\n\n    // Save action\n    actionStack.current.push(action);\n  };\n\n  const handleClearCanvas = () => {\n    clearCanvas();\n    socket.emit('clearCanvas', roomId);\n\n    // Clear action stacks\n    actionStack.current = [];\n    undoneStack.current = [];\n  };\n\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const context = contextRef.current;\n    context.clearRect(0, 0, canvas.width, canvas.height);\n  };\n\n  const undo = () => {\n    if (actionStack.current.length === 0) return;\n\n    // Remove the last action(s) and add to undone stack\n    let action = actionStack.current.pop();\n    undoneStack.current.push(action);\n\n    if (action.type === 'draw') {\n      while (actionStack.current.length > 0) {\n        action = actionStack.current.pop();\n        undoneStack.current.push(action);\n        if (action.type === 'begin') break;\n      }\n    }\n\n    redrawCanvas();\n\n    // Emit undo event\n    socket.emit('undo', { roomId });\n  };\n\n  const redo = () => {\n    if (undoneStack.current.length === 0) return;\n\n    // Restore actions from the undone stack\n    let action = undoneStack.current.pop();\n    actionStack.current.push(action);\n\n    if (action.type === 'begin') {\n      while (undoneStack.current.length > 0) {\n        action = undoneStack.current.pop();\n        actionStack.current.push(action);\n        if (action.type === 'begin') break;\n      }\n    }\n\n    redrawCanvas();\n\n    // Emit redo event\n    socket.emit('redo', { roomId, action });\n  };\n\n  const onUndoEvent = () => {\n    if (actionStack.current.length === 0) return;\n\n    // Remove the last action(s) and add to undone stack\n    let action = actionStack.current.pop();\n    undoneStack.current.push(action);\n\n    if (action.type === 'draw') {\n      while (actionStack.current.length > 0) {\n        action = actionStack.current.pop();\n        undoneStack.current.push(action);\n        if (action.type === 'begin') break;\n      }\n    }\n\n    redrawCanvas();\n  };\n\n  const onRedoEvent = (action) => {\n    if (!action) return;\n\n    // Restore actions from the undone stack\n    actionStack.current.push(action);\n\n    if (action.type === 'begin') {\n      while (undoneStack.current.length > 0) {\n        action = undoneStack.current.pop();\n        actionStack.current.push(action);\n        if (action.type === 'begin') break;\n      }\n    }\n\n    redrawCanvas();\n  };\n\n  const redrawCanvas = () => {\n    clearCanvas();\n\n    const context = contextRef.current;\n    context.lineJoin = 'round';\n\n    actionStack.current.forEach((action) => {\n      context.lineWidth = action.brushSize;\n      context.lineCap = 'round';\n      context.strokeStyle = action.brushColor;\n\n      if (action.type === 'begin') {\n        context.beginPath();\n        context.moveTo(action.offsetX, action.offsetY);\n      } else if (action.type === 'draw') {\n        context.lineTo(action.offsetX, action.offsetY);\n        context.stroke();\n      }\n    });\n  };\n\n  // Room selection screen\n  if (!inRoom) {\n    return (\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100vh',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: '#f5f5f5',\n        }}\n      >\n        <Typography variant=\"h4\" gutterBottom>\n          Enter Room ID\n        </Typography>\n        <TextField\n          label=\"Room ID\"\n          value={roomId}\n          onChange={(e) => setRoomId(e.target.value)}\n          variant=\"outlined\"\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={joinRoom}\n          sx={{ marginTop: '20px' }}\n        >\n          Join Room\n        </Button>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', height: '100vh' }}>\n      {/* AppBar */}\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Brush />\n          <Typography variant=\"h6\" sx={{ flexGrow: 1, marginLeft: 1 }}>\n            Collaborative Drawing Board - Room: {roomId}\n          </Typography>\n          <IconButton color=\"inherit\" onClick={handleClearCanvas}>\n            <LayersClear />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      {/* Main Content */}\n      <Box sx={{ display: 'flex', flexGrow: 1 }}>\n        {/* Side Panel */}\n        <Box\n          sx={{\n            width: '200px',\n            padding: '10px',\n            backgroundColor: '#f5f5f5',\n            overflowY: 'auto',\n            boxShadow: '2px 0px 5px rgba(0,0,0,0.1)',\n          }}\n        >\n          {/* Brush Size */}\n          <Typography variant=\"subtitle1\">Brush Size</Typography>\n          <Slider\n            value={brushSize}\n            onChange={(e, value) => setBrushSize(value)}\n            min={1}\n            max={50}\n            aria-labelledby=\"brush-size-slider\"\n          />\n\n          {/* Brush Color */}\n          <Typography variant=\"subtitle1\" sx={{ marginTop: '20px' }}>\n            Brush Color\n          </Typography>\n          <SketchPicker\n            color={brushColor}\n            onChangeComplete={(color) => setBrushColor(color.hex)}\n            disableAlpha\n            width=\"180px\"\n          />\n\n          {/* Undo and Redo Buttons */}\n          <Button\n            variant=\"contained\"\n            onClick={undo}\n            sx={{ marginTop: '20px', width: '100%' }}\n          >\n            Undo\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={redo}\n            sx={{ marginTop: '10px', width: '100%' }}\n          >\n            Redo\n          </Button>\n        </Box>\n\n        {/* Canvas */}\n        <canvas\n          ref={canvasRef}\n          style={{ border: '1px solid #ccc', flexGrow: 1, cursor: 'crosshair' }}\n          onMouseDown={startDrawing}\n          onMouseUp={finishDrawing}\n          onMouseOut={finishDrawing}\n          onMouseMove={draw}\n        />\n      </Box>\n\n      {/* Loading Indicator */}\n      {isLoading && (\n        <Box\n          sx={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            backgroundColor: 'rgba(255,255,255,0.8)',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            zIndex: 1000,\n          }}\n        >\n          <CircularProgress />\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}